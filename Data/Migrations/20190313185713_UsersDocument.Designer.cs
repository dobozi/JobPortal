// <auto-generated />
using System;
using JobsPortal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JobsPortal.Data.Migrations
{
    [DbContext(typeof(JobsPortalDbContext))]
    [Migration("20190313185713_UsersDocument")]
    partial class UsersDocument
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JobsPortal.Data.Entities.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress");

                    b.Property<int?>("CVId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("PhoneNumber");

                    b.HasKey("Id");

                    b.HasIndex("CVId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("JobsPortal.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("JobsPortal.Data.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("JobsPortal.Data.Entities.CompanyRecruiter", b =>
                {
                    b.Property<int>("CompanyId");

                    b.Property<int>("RecruiterId");

                    b.HasKey("CompanyId", "RecruiterId");

                    b.HasIndex("RecruiterId");

                    b.ToTable("CompanyRecruiter");
                });

            modelBuilder.Entity("JobsPortal.Data.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<string>("CreatedDate");

                    b.Property<string>("Ext");

                    b.Property<string>("ModifiedDate");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("JobsPortal.Data.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<string>("JobDescription");

                    b.Property<string>("JobTitle");

                    b.Property<string>("WorkSchedule");

                    b.Property<string>("WorkplaceAddress");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("JobsPortal.Data.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("JobsPortal.Data.Entities.Recruiter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted");

                    b.Property<string>("FirstName");

                    b.Property<string>("Identifier");

                    b.Property<string>("LastName");

                    b.Property<int>("PhoneNumber");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Recruiters");
                });

            modelBuilder.Entity("JobsPortal.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JobsPortal.Data.Entities.Candidate", b =>
                {
                    b.HasOne("JobsPortal.Data.Entities.Document", "CV")
                        .WithMany()
                        .HasForeignKey("CVId");
                });

            modelBuilder.Entity("JobsPortal.Data.Entities.CompanyRecruiter", b =>
                {
                    b.HasOne("JobsPortal.Data.Entities.Company", "Company")
                        .WithMany("CompanyRecruiters")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobsPortal.Data.Entities.Recruiter", "Recruiter")
                        .WithMany("CompanyRecruiters")
                        .HasForeignKey("RecruiterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
